[33mcommit cdad80908629990a8db7e9f36b014d5e8c3008a9[m[33m ([m[1;36mHEAD[m[33m -> [m[1;32mmaster[m[33m)[m
Author: Ilya Alekseev <phone192@yandex.ru>
Date:   Mon Feb 24 13:22:55 2025 +0300

    create remote rep

[1mdiff --git a/main.go b/main.go[m
[1mnew file mode 100644[m
[1mindex 0000000..0dfd31f[m
[1m--- /dev/null[m
[1m+++ b/main.go[m
[36m@@ -0,0 +1,177 @@[m
[32m+[m[32mpackage main[m
[32m+[m
[32m+[m[32mimport ([m
[32m+[m	[32m"database/sql"[m
[32m+[m	[32m"fmt"[m
[32m+[m	[32m"time"[m
[32m+[m
[32m+[m	[32m_ "modernc.org/sqlite"[m
[32m+[m[32m)[m
[32m+[m
[32m+[m[32mconst ([m
[32m+[m	[32mParcelStatusRegistered = "registered"[m
[32m+[m	[32mParcelStatusSent       = "sent"[m
[32m+[m	[32mParcelStatusDelivered  = "delivered"[m
[32m+[m[32m)[m
[32m+[m
[32m+[m[32mtype Parcel struct {[m
[32m+[m	[32mNumber    int[m
[32m+[m	[32mClient    int[m
[32m+[m	[32mStatus    string[m
[32m+[m	[32mAddress   string[m
[32m+[m	[32mCreatedAt string[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mtype ParcelService struct {[m
[32m+[m	[32mstore ParcelStore[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunc NewParcelService(store ParcelStore) ParcelService {[m
[32m+[m	[32mreturn ParcelService{store: store}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunc (s ParcelService) Register(client int, address string) (Parcel, error) {[m
[32m+[m	[32mparcel := Parcel{[m
[32m+[m		[32mClient:    client,[m
[32m+[m		[32mStatus:    ParcelStatusRegistered,[m
[32m+[m		[32mAddress:   address,[m
[32m+[m		[32mCreatedAt: time.Now().UTC().Format(time.RFC3339),[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mid, err := s.store.Add(parcel)[m
[32m+[m	[32mif err != nil {[m
[32m+[m		[32mreturn parcel, err[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mparcel.Number = id[m
[32m+[m
[32m+[m	[32mfmt.Printf("–ù–æ–≤–∞—è –ø–æ—Å—ã–ª–∫–∞ ‚Ññ %d –Ω–∞ –∞–¥—Ä–µ—Å %s –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞ —Å –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–º %d –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞ %s\n",[m
[32m+[m		[32mparcel.Number, parcel.Address, parcel.Client, parcel.CreatedAt)[m
[32m+[m
[32m+[m	[32mreturn parcel, nil[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunc (s ParcelService) PrintClientParcels(client int) error {[m
[32m+[m	[32mparcels, err := s.store.GetByClient(client)[m
[32m+[m	[32mif err != nil {[m
[32m+[m		[32mreturn err[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mfmt.Printf("–ü–æ—Å—ã–ª–∫–∏ –∫–ª–∏–µ–Ω—Ç–∞ %d:\n", client)[m
[32m+[m	[32mfor _, parcel := range parcels {[m
[32m+[m		[32mfmt.Printf("–ü–æ—Å—ã–ª–∫–∞ ‚Ññ %d –Ω–∞ –∞–¥—Ä–µ—Å %s –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞ —Å –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–º %d –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞ %s, —Å—Ç–∞—Ç—É—Å %s\n",[m
[32m+[m			[32mparcel.Number, parcel.Address, parcel.Client, parcel.CreatedAt, parcel.Status)[m
[32m+[m	[32m}[m
[32m+[m	[32mfmt.Println()[m
[32m+[m
[32m+[m	[32mreturn nil[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunc (s ParcelService) NextStatus(number int) error {[m
[32m+[m	[32mparcel, err := s.store.Get(number)[m
[32m+[m	[32mif err != nil {[m
[32m+[m		[32mreturn err[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mvar nextStatus string[m
[32m+[m	[32mswitch parcel.Status {[m
[32m+[m	[32mcase ParcelStatusRegistered:[m
[32m+[m		[32mnextStatus = ParcelStatusSent[m
[32m+[m	[32mcase ParcelStatusSent:[m
[32m+[m		[32mnextStatus = ParcelStatusDelivered[m
[32m+[m	[32mcase ParcelStatusDelivered:[m
[32m+[m		[32mreturn nil[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mfmt.Printf("–£ –ø–æ—Å—ã–ª–∫–∏ ‚Ññ %d –Ω–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å: %s\n", number, nextStatus)[m
[32m+[m
[32m+[m	[32mreturn s.store.SetStatus(number, nextStatus)[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunc (s ParcelService) ChangeAddress(number int, address string) error {[m
[32m+[m	[32mreturn s.store.SetAddress(number, address)[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunc (s ParcelService) Delete(number int) error {[m
[32m+[m	[32mreturn s.store.Delete(number)[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunc main() {[m
[32m+[m	[32mdb, err := sql.Open("sqlite", "tracker.db")[m
[32m+[m	[32mif err != nil {[m
[32m+[m		[32mfmt.Println(err)[m
[32m+[m		[32mreturn[m
[32m+[m	[32m}[m
[32m+[m	[32mdefer db.Close()[m
[32m+[m
[32m+[m	[32mstore := NewParcelStore(db)[m
[32m+[m	[32mservice := NewParcelService(store)[m
[32m+[m
[32m+[m	[32m// —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ—Å—ã–ª–∫–∏[m
[32m+[m	[32mclient := 1[m
[32m+[m	[32maddress := "–ü—Å–∫–æ–≤, –¥. –ü—É—à–∫–∏–Ω–∞, —É–ª. –ö–æ–ª–æ—Ç—É—à–∫–∏–Ω–∞, –¥. 5"[m
[32m+[m	[32mp, err := service.Register(client, address)[m
[32m+[m	[32mif err != nil {[m
[32m+[m		[32mfmt.Println(err)[m
[32m+[m		[32mreturn[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m// –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∞–¥—Ä–µ—Å–∞[m
[32m+[m	[32mnewAddress := "–°–∞—Ä–∞—Ç–æ–≤, –¥. –í–µ—Ä—Ö–Ω–∏–µ –ó–æ—Ä–∏, —É–ª. –ö–æ–∑–ª–æ–≤–∞, –¥. 25"[m
[32m+[m	[32merr = service.ChangeAddress(p.Number, newAddress)[m
[32m+[m	[32mif err != nil {[m
[32m+[m		[32mfmt.Println(err)[m
[32m+[m		[32mreturn[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m// –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞[m
[32m+[m	[32merr = service.NextStatus(p.Number)[m
[32m+[m	[32mif err != nil {[m
[32m+[m		[32mfmt.Println(err)[m
[32m+[m		[32mreturn[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m// –≤—ã–≤–æ–¥ –ø–æ—Å—ã–ª–æ–∫ –∫–ª–∏–µ–Ω—Ç–∞[m
[32m+[m	[32merr = service.PrintClientParcels(client)[m
[32m+[m	[32mif err != nil {[m
[32m+[m		[32mfmt.Println(err)[m
[32m+[m		[32mreturn[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m// –ø–æ–ø—ã—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π –ø–æ—Å—ã–ª–∫–∏[m
[32m+[m	[32merr = service.Delete(p.Number)[m
[32m+[m	[32mif err != nil {[m
[32m+[m		[32mfmt.Println(err)[m
[32m+[m		[32mreturn[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m// –≤—ã–≤–æ–¥ –ø–æ—Å—ã–ª–æ–∫ –∫–ª–∏–µ–Ω—Ç–∞[m
[32m+[m	[32m// –ø—Ä–µ–¥—ã–¥—É—â–∞—è –ø–æ—Å—ã–ª–∫–∞ –Ω–µ –¥–æ–ª–∂–Ω–∞ —É–¥–∞–ª–∏—Ç—å—Å—è, —Ç–∞–∫ –∫–∞–∫ –µ—ë —Å—Ç–∞—Ç—É—Å ¬´–ù–ï ¬´–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞¬ª[m
[32m+[m	[32merr = service.PrintClientParcels(client)[m
[32m+[m	[32mif err != nil {[m
[32m+[m		[32mfmt.Println(err)[m
[32m+[m		[32mreturn[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m// —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–π –ø–æ—Å—ã–ª–∫–∏[m
[32m+[m	[32mp, err = service.Register(client, address)[m
[32m+[m	[32mif err != nil {[m
[32m+[m		[32mfmt.Println(err)[m
[32m+[m		[32mreturn[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m// —É–¥–∞–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π –ø–æ—Å—ã–ª–∫–∏[m
[32m+[m	[32merr = service.Delete(p.Number)[m
[32m+[m	[32mif err != nil {[m
[32m+[m		[32mfmt.Println(err)[m
[32m+[m		[32mreturn[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m// –≤—ã–≤–æ–¥ –ø–æ—Å—ã–ª–æ–∫ –∫–ª–∏–µ–Ω—Ç–∞[m
[32m+[m	[32m// –∑–¥–µ—Å—å –Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ—Å–ª–µ–¥–Ω–µ–π –ø–æ—Å—ã–ª–∫–∏, —Ç–∞–∫ –∫–∞–∫ –æ–Ω–∞ –¥–æ–ª–∂–Ω–∞ –±—ã–ª–∞ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–∏—Ç—å—Å—è[m
[32m+[m	[32merr = service.PrintClientParcels(client)[m
[32m+[m	[32mif err != nil {[m
[32m+[m		[32mfmt.Println(err)[m
[32m+[m		[32mreturn[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[1mdiff --git a/parcel.go b/parcel.go[m
[1mnew file mode 100644[m
[1mindex 0000000..783b05c[m
[1m--- /dev/null[m
[1m+++ b/parcel.go[m
[36m@@ -0,0 +1,96 @@[m
[32m+[m[32mpackage main[m
[32m+[m
[32m+[m[32mimport ([m
[32m+[m	[32m"database/sql"[m
[32m+[m[32m)[m
[32m+[m
[32m+[m[32mtype ParcelStore struct {[m
[32m+[m	[32mdb *sql.DB[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunc NewParcelStore(db *sql.DB) ParcelStore {[m
[32m+[m	[32mreturn ParcelStore{db: db}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunc (s ParcelStore) Add(p Parcel) (int, error) {[m
[32m+[m	[32mres, err := s.db.Exec("INSERT INTO parcel (client, status, address, created_at) VALUES (:client, :status, :address, :created_at)",[m
[32m+[m		[32msql.Named("client", p.Client),[m
[32m+[m		[32msql.Named("status", p.Status),[m
[32m+[m		[32msql.Named("address", p.Address),[m
[32m+[m		[32msql.Named("created_at", p.CreatedAt))[m
[32m+[m	[32mif err != nil {[m
[32m+[m		[32mreturn 0, err[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mid, err := res.LastInsertId()[m
[32m+[m	[32mif err != nil {[m
[32m+[m		[32mreturn 0, err[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mreturn int(id), nil[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunc (s ParcelStore) Get(number int) (Parcel, error) {[m
[32m+[m	[32mp := Parcel{}[m
[32m+[m
[32m+[m	[32mrow := s.db.QueryRow("SELECT number, client, status, address, created_at FROM parcel WHERE number = :number",[m
[32m+[m		[32msql.Named("number", number))[m
[32m+[m	[32merr := row.Scan(&p.Number, &p.Client, &p.Status, &p.Address, &p.CreatedAt)[m
[32m+[m	[32mif err != nil {[m
[32m+[m		[32mreturn p, err[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mreturn p, nil[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunc (s ParcelStore) GetByClient(client int) ([]Parcel, error) {[m
[32m+[m	[32mrows, err := s.db.Query("SELECT number, client, status, address, created_at FROM parcel WHERE client = :client",[m
[32m+[m		[32msql.Named("client", client))[m
[32m+[m	[32mif err != nil {[m
[32m+[m		[32mreturn nil, err[m
[32m+[m	[32m}[m
[32m+[m	[32mdefer rows.Close()[m
[32m+[m
[32m+[m	[32mvar res []Parcel[m
[32m+[m	[32mfor rows.Next() {[m
[32m+[m		[32mp := Parcel{}[m
[32m+[m
[32m+[m		[32merr := rows.Scan(&p.Number, &p.Client, &p.Status, &p.Address, &p.CreatedAt)[m
[32m+[m		[32mif err != nil {[m
[32m+[m			[32mreturn nil, err[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mres = append(res, p)[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mif err := rows.Err(); err != nil {[m
[32m+[m		[32mreturn nil, err[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mreturn res, nil[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunc (s ParcelStore) SetStatus(number int, status string) error {[m
[32m+[m	[32m_, err := s.db.Exec("UPDATE parcel SET status = :status WHERE number = :number",[m
[32m+[m		[32msql.Named("status", status),[m
[32m+[m		[32msql.Named("number", number))[m
[32m+[m
[32m+[m	[32mreturn err[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunc (s ParcelStore) SetAddress(number int, address string) error {[m
[32m+[m	[32m_, err := s.db.Exec("UPDATE parcel SET address = :address WHERE number = :number AND status = :status",[m
[32m+[m		[32msql.Named("address", address),[m
[32m+[m		[32msql.Named("number", number),[m
[32m+[m		[32msql.Named("status", ParcelStatusRegistered))[m
[32m+[m
[32m+[m	[32mreturn err[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunc (s ParcelStore) Delete(number int) error {[m
[32m+[m	[32m_, err := s.db.Exec("DELETE FROM parcel WHERE number = :number AND status = :status",[m
[32m+[m		[32msql.Named("number", number),[m
[32m+[m		[32msql.Named("status", ParcelStatusRegistered))[m
[32m+[m
[32m+[m	[32mreturn err[m
[32m+[m[32m}[m
[1mdiff --git a/parcel_test.go b/parcel_test.go[m
[1mnew file mode 100644[m
[1mindex 0000000..88bef26[m
[1m--- /dev/null[m
[1m+++ b/parcel_test.go[m
[36m@@ -0,0 +1,167 @@[m
[32m+[m[32mpackage main[m
[32m+[m
[32m+[m[32mimport ([m
[32m+[m	[32m"database/sql"[m
[32m+[m	[32m"math/rand"[m
[32m+[m	[32m"testing"[m
[32m+[m	[32m"time"[m
[32m+[m
[32m+[m	[32m"github.com/stretchr/testify/require"[m
[32m+[m[32m)[m
[32m+[m
[32m+[m[32mvar ([m
[32m+[m	[32m// randSource ‚Äî —ç—Ç–æ –∏—Å—Ç–æ—á–Ω–∏–∫ –ø—Å–µ–≤–¥–æ—Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª.[m
[32m+[m	[32m// –î–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏ –≤ –∫–∞—á–µ—Å—Ç–≤–µ seed[m
[32m+[m	[32m// –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤ unix-—Ñ–æ—Ä–º–∞—Ç–µ –≤ –≤–∏–¥–µ —á–∏—Å–ª–∞[m
[32m+[m	[32mrandSource = rand.NewSource(time.Now().UnixNano())[m
[32m+[m	[32m// randRange –∏—Å–ø–æ–ª—å–∑—É–µ—Ç randSource –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª[m
[32m+[m	[32mrandRange = rand.New(randSource)[m
[32m+[m[32m)[m
[32m+[m
[32m+[m[32m// getTestParcel –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—É—é –ø–æ—Å—ã–ª–∫—É[m
[32m+[m[32mfunc getTestParcel() Parcel {[m
[32m+[m	[32mreturn Parcel{[m
[32m+[m		[32mClient:    1000,[m
[32m+[m		[32mStatus:    ParcelStatusRegistered,[m
[32m+[m		[32mAddress:   "test",[m
[32m+[m		[32mCreatedAt: time.Now().UTC().Format(time.RFC3339),[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m// TestAddGetDelete –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ, –ø–æ–ª—É—á–µ–Ω–∏–µ –∏ —É–¥–∞–ª–µ–Ω–∏–µ –ø–æ—Å—ã–ª–∫–∏[m
[32m+[m[32mfunc TestAddGetDelete(t *testing.T) {[m
[32m+[m	[32m// prepare[m
[32m+[m	[32mdb, err := sql.Open("sqlite", "tracker.db")[m
[32m+[m	[32mif err != nil {[m
[32m+[m		[32mrequire.NoError(t, err)[m
[32m+[m	[32m}[m
[32m+[m	[32mdefer db.Close()[m
[32m+[m	[32mstore := NewParcelStore(db)[m
[32m+[m	[32mparcel := getTestParcel()[m
[32m+[m
[32m+[m	[32m// add[m
[32m+[m	[32mparcel.Number, err = store.Add(parcel)[m
[32m+[m
[32m+[m	[32mrequire.NoError(t, err)[m
[32m+[m	[32mrequire.NotEmpty(t, parcel.Number)[m
[32m+[m
[32m+[m	[32m// get[m
[32m+[m	[32mstored, err := store.Get(parcel.Number)[m
[32m+[m
[32m+[m	[32mrequire.NoError(t, err)[m
[32m+[m	[32mrequire.Equal(t, parcel, stored)[m
[32m+[m
[32m+[m	[32m// delete[m
[32m+[m	[32merr = store.Delete(parcel.Number)[m
[32m+[m
[32m+[m	[32mstored, err = store.Get(parcel.Number)[m
[32m+[m	[32mrequire.Equal(t, sql.ErrNoRows, err)[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m// TestSetAddress –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–¥—Ä–µ—Å–∞[m
[32m+[m[32mfunc TestSetAddress(t *testing.T) {[m
[32m+[m	[32m// prepare[m
[32m+[m	[32mdb, err := sql.Open("sqlite", "tracker.db")[m
[32m+[m	[32mif err != nil {[m
[32m+[m		[32mrequire.NoError(t, err)[m
[32m+[m	[32m}[m
[32m+[m	[32mdefer db.Close()[m
[32m+[m	[32mstore := NewParcelStore(db)[m
[32m+[m	[32mparcel := getTestParcel()[m
[32m+[m
[32m+[m	[32m// add[m
[32m+[m	[32mparcel.Number, err = store.Add(parcel)[m
[32m+[m
[32m+[m	[32mrequire.NoError(t, err)[m
[32m+[m	[32mrequire.NotEmpty(t, parcel.Number)[m
[32m+[m
[32m+[m	[32m// set address[m
[32m+[m	[32mnewAddress := "new test address"[m
[32m+[m	[32merr = store.SetAddress(parcel.Number, newAddress)[m
[32m+[m
[32m+[m	[32mrequire.NoError(t, err)[m
[32m+[m
[32m+[m	[32m// check[m
[32m+[m	[32mstored, err := store.Get(parcel.Number)[m
[32m+[m
[32m+[m	[32mrequire.NoError(t, err)[m
[32m+[m	[32mrequire.Equal(t, newAddress, stored.Address)[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m// TestSetStatus –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞[m
[32m+[m[32mfunc TestSetStatus(t *testing.T) {[m
[32m+[m	[32m// prepare[m
[32m+[m	[32mdb, err := sql.Open("sqlite", "tracker.db")[m
[32m+[m	[32mif err != nil {[m
[32m+[m		[32mrequire.NoError(t, err)[m
[32m+[m	[32m}[m
[32m+[m	[32mdefer db.Close()[m
[32m+[m	[32mstore := NewParcelStore(db)[m
[32m+[m	[32mparcel := getTestParcel()[m
[32m+[m
[32m+[m	[32m// add[m
[32m+[m	[32mparcel.Number, err = store.Add(parcel)[m
[32m+[m
[32m+[m	[32mrequire.NoError(t, err)[m
[32m+[m	[32mrequire.NotEmpty(t, parcel.Number)[m
[32m+[m
[32m+[m	[32m// set status[m
[32m+[m	[32merr = store.SetStatus(parcel.Number, ParcelStatusSent)[m
[32m+[m
[32m+[m	[32mrequire.NoError(t, err)[m
[32m+[m
[32m+[m	[32m// check[m
[32m+[m	[32mstored, err := store.Get(parcel.Number)[m
[32m+[m
[32m+[m	[32mrequire.NoError(t, err)[m
[32m+[m	[32mrequire.Equal(t, ParcelStatusSent, stored.Status)[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m// TestGetByClient –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–æ—Å—ã–ª–æ–∫ –ø–æ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—É –∫–ª–∏–µ–Ω—Ç–∞[m
[32m+[m[32mfunc TestGetByClient(t *testing.T) {[m
[32m+[m	[32m// prepare[m
[32m+[m	[32mdb, err := sql.Open("sqlite", "tracker.db")[m
[32m+[m	[32mif err != nil {[m
[32m+[m		[32mrequire.NoError(t, err)[m
[32m+[m	[32m}[m
[32m+[m	[32mdefer db.Close()[m
[32m+[m	[32mstore := NewParcelStore(db)[m
[32m+[m
[32m+[m	[32mparcels := []Parcel{[m
[32m+[m		[32mgetTestParcel(),[m
[32m+[m		[32mgetTestParcel(),[m
[32m+[m		[32mgetTestParcel(),[m
[32m+[m	[32m}[m
[32m+[m	[32mparcelMap := map[int]Parcel{}[m
[32m+[m
[32m+[m	[32m// –∑–∞–¥–∞—ë–º –≤—Å–µ–º –ø–æ—Å—ã–ª–∫–∞–º –æ–¥–Ω–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞[m
[32m+[m	[32mclient := randRange.Intn(10_000_000)[m
[32m+[m	[32mparcels[0].Client = client[m
[32m+[m	[32mparcels[1].Client = client[m
[32m+[m	[32mparcels[2].Client = client[m
[32m+[m
[32m+[m	[32m// add[m
[32m+[m	[32mfor i := 0; i < len(parcels); i++ {[m
[32m+[m		[32mid, err := store.Add(parcels[i])[m
[32m+[m
[32m+[m		[32mrequire.NoError(t, err)[m
[32m+[m		[32mrequire.NotEmpty(t, id)[m
[32m+[m
[32m+[m		[32mparcels[i].Number = id[m
[32m+[m		[32mparcelMap[id] = parcels[i][m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m// get by client[m
[32m+[m	[32mstoredParcels, err := store.GetByClient(client)[m
[32m+[m
[32m+[m	[32mrequire.NoError(t, err)[m
[32m+[m	[32mrequire.Len(t, storedParcels, len(parcels))[m
[32m+[m
[32m+[m	[32m// check[m
[32m+[m	[32mfor _, parcel := range storedParcels {[m
[32m+[m		[32mexpectedParcel, ok := parcelMap[parcel.Number][m
[32m+[m
[32m+[m		[32mrequire.True(t, ok)[m
[32m+[m		[32mrequire.Equal(t, expectedParcel, parcel)[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[1mdiff --git a/tracker.db b/tracker.db[m
[1mnew file mode 100644[m
[1mindex 0000000..04ab843[m
Binary files /dev/null and b/tracker.db differ
